// THIS FILE IS AUTOMATICALLY GENERATED, DO NOT EDIT BY HAND!
use ocaml::ToValue;

#[ocaml::native_func]
pub fn mlparquet__ml_rs1(v1: ocaml::Value) -> ocaml::Value {
    let v1: &str =  ocaml::FromValue::from_value(v1);
    let res: Result<ocaml::Pointer<super::helpers::Reader>, ocaml::Error> = super::helpers::parquet_reader(v1);
    res.to_value()
}
#[ocaml::native_func]
pub fn mlparquet__ml_rs2(v1: ocaml::Value) -> ocaml::Value {
    let v1: ocaml::Pointer<super::helpers::Reader> =  ocaml::FromValue::from_value(v1);
    let res: () = super::helpers::reader_close(v1);
    res.to_value()
}
#[ocaml::native_func]
pub fn mlparquet__ml_rs3(v1: ocaml::Value) -> ocaml::Value {
    let v1: ocaml::Pointer<super::helpers::Reader> =  ocaml::FromValue::from_value(v1);
    let res: Vec<(String, isize)> = super::helpers::fields(v1);
    res.to_value()
}
#[ocaml::native_func]
pub fn mlparquet__ml_rs4(v1: ocaml::Value, v2: ocaml::Value) -> ocaml::Value {
    let v1: ocaml::Pointer<super::helpers::Reader> =  ocaml::FromValue::from_value(v1);
    let v2: isize =  ocaml::FromValue::from_value(v2);
    let res: Result<Vec<isize>, ocaml::Error> = super::helpers::read_int_col(v1, v2);
    res.to_value()
}
#[ocaml::native_func]
pub fn mlparquet__ml_rs5(v1: ocaml::Value, v2: ocaml::Value) -> ocaml::Value {
    let v1: ocaml::Pointer<super::helpers::Reader> =  ocaml::FromValue::from_value(v1);
    let v2: isize =  ocaml::FromValue::from_value(v2);
    let res: Result<ocaml::bigarray::Array1<i64>, ocaml::Error> = super::helpers::read_int_col_ba(v1, v2);
    res.to_value()
}
#[ocaml::native_func]
pub fn mlparquet__ml_rs6(v1: ocaml::Value, v2: ocaml::Value) -> ocaml::Value {
    let v1: ocaml::Pointer<super::helpers::Reader> =  ocaml::FromValue::from_value(v1);
    let v2: isize =  ocaml::FromValue::from_value(v2);
    let res: Result<Vec<f64>, ocaml::Error> = super::helpers::read_float_col(v1, v2);
    res.to_value()
}
#[ocaml::native_func]
pub fn mlparquet__ml_rs7(v1: ocaml::Value, v2: ocaml::Value) -> ocaml::Value {
    let v1: ocaml::Pointer<super::helpers::Reader> =  ocaml::FromValue::from_value(v1);
    let v2: isize =  ocaml::FromValue::from_value(v2);
    let res: Result<Vec<String>, ocaml::Error> = super::helpers::read_string_col(v1, v2);
    res.to_value()
}
#[ocaml::native_func]
pub fn mlparquet__ml_rs8(v1: ocaml::Value) -> ocaml::Value {
    let v1: ocaml::Pointer<super::helpers::Reader> =  ocaml::FromValue::from_value(v1);
    let res: isize = super::helpers::num_rows(v1);
    res.to_value()
}
